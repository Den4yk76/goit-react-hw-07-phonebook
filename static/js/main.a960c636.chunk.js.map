{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","Components/Form/Form.js","Components/ConatctsList/ContactsListItem.js","Components/Filter/Filter.js","Components/ConatctsList/ConatctsList.js","Components/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","userName","userNumber","dispatch","contact","name","number","post","then","response","data","catch","err","contactId","delete","get","Form","state","onSubmit","e","preventDefault","props","addContact","setState","onChange","currentTarget","value","className","this","type","pattern","title","required","Component","connect","contactsOperations","contacts","items","fetchContacts","operations","deleteContact","id","useEffect","map","el","onClick","target","filter","toLowerCase","includes","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","store","next","action","console","log","logger","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a960c636.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/find');\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://619362fcd3ae6d0017da852d.mockapi.io';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(response => dispatch(fetchContactsSuccess(response.data)))\r\n    .catch(err => dispatch(fetchContactsError(err)));\r\n};\r\n\r\nconst addContact = (userName, userNumber) => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  const contact = { name: userName, number: userNumber };\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(response => dispatch(addContactSuccess(response.data)))\r\n    .catch(err => dispatch(addContactError(err)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(err => dispatch(deleteContactError(err)));\r\n};\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state.name, this.state.number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  onChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <label className=\"label\">\r\n          Name{' '}\r\n          <input\r\n            value={this.state.name}\r\n            className=\"label\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Phone{' '}\r\n          <input\r\n            value={this.state.number}\r\n            className=\"label\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.onChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (userName, userNumber) =>\r\n    dispatch(contactsOperations.addContact(userName, userNumber)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\n\r\nfunction ContactsListItem({ contacts, deleteContact, fetchContacts }) {\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  return contacts.map(el => {\r\n    return (\r\n      <li key={el.id}>\r\n        {el.name}: {el.number}\r\n        <button\r\n          className=\"button\"\r\n          type=\"button\"\r\n          id={el.id}\r\n          onClick={e => {\r\n            deleteContact(e.target.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(operations.fetchContacts()),\r\n  deleteContact: id => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);\r\n","import { connect } from 'react-redux';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\n\r\nfunction Filter({ contacts, filter, deleteContact }) {\r\n  const findUsers = () => {\r\n    return contacts.filter(el =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  return findUsers().map(el => {\r\n    return (\r\n      <li key={el.id}>\r\n        {el.name}: {el.number}\r\n        <button\r\n          className=\"button\"\r\n          type=\"button\"\r\n          id={el.id}\r\n          onClick={e => {\r\n            deleteContact(e.target.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import ContactsListItem from './ContactsListItem';\r\nimport Filter from '../Filter/Filter';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\n\r\nfunction ContactsList({ filter, changeFilter }) {\r\n  return (\r\n    <>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        onChange={e => changeFilter(e.currentTarget.value)}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n      <ul>{!filter ? <ContactsListItem /> : <Filter />}</ul>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: value => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","// import { useState, useEffect } from 'react';\r\nimport Form from './Form/Form';\r\nimport ContactsList from './ConatctsList/ConatctsList';\r\nimport './styles.css';\r\n\r\nexport default function App() {\r\n  // useEffect(() => {\r\n  //   const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n  //   if (parsedContacts) {\r\n  //     setContacts(parsedContacts);\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n      <h2>Contacts</h2>\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://619362fcd3ae6d0017da852d.mockapi.io';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) => {\r\n    return state.filter(({ id }) => id !== payload);\r\n  },\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import contactsReducer from './contacts/contacts-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nconst myMiddleware = store => next => action => {\r\n  console.log('My middleware', action);\r\n  next(action);\r\n};\r\n\r\nconst middleware = [...getDefaultMiddleware(), myMiddleware, logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './Components/App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}