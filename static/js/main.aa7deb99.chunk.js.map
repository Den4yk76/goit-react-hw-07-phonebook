{"version":3,"sources":["contacts-api.js","redux/contacts/contacts-operations.js","Components/Form/Form.js","Components/ConatctsList/ContactsListItem.js","Components/Filter/Filter.js","redux/contacts/contacts-actions.js","Components/ConatctsList/ConatctsList.js","Components/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","contactId","delete","defaults","baseURL","createAsyncThunk","contactsApi","contacts","name","number","Form","state","onSubmit","e","preventDefault","contactsArr","props","forEach","el","push","includes","alert","setState","onChange","currentTarget","value","className","this","type","pattern","title","required","Component","connect","items","dispatch","id","useEffect","map","onClick","target","filter","toLowerCase","changeFilter","createAction","App","createReducer","fulfilled","_","payload","console","log","loading","pending","rejected","combineReducers","middleware","getDefaultMiddleware","store","next","action","logger","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa7deb99.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://619362fcd3ae6d0017da852d.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n  return data;\r\n}\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsApi from '../../contacts-api';\r\n\r\naxios.defaults.baseURL = 'https://619362fcd3ae6d0017da852d.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    const contacts = await contactsApi.fetchContacts();\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async data => {\r\n    const contact = { name: data.name, number: data.number };\r\n    const contacts = await contactsApi.addContact(contact);\r\n    // console.log('operation add', contacts);\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async contactId => {\r\n    const contacts = await contactsApi.deleteContact(contactId);\r\n    return contacts;\r\n  },\r\n);\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const contactsArr = [];\r\n    this.props.contacts.forEach(el => {\r\n      contactsArr.push(el.name, el.number);\r\n    });\r\n\r\n    if (contactsArr.includes(this.state.number)) {\r\n      /* Проверка на имя || this.state.name.toLowerCase().trim())  */\r\n      alert('This umber is already in contacts. Please change information');\r\n      return;\r\n    } else {\r\n      this.props.addContact(this.state);\r\n      this.setState({ name: '', number: '' });\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <label className=\"label\">\r\n          Name{' '}\r\n          <input\r\n            value={this.state.name}\r\n            className=\"label\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Phone{' '}\r\n          <input\r\n            value={this.state.number}\r\n            className=\"label\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.onChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // addContact: (userName, userNumber) =>\r\n  //   dispatch(addContact(userName, userNumber)),\r\n  addContact: state => dispatch(addContact(state)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n} from '../../redux/contacts/contacts-operations';\r\n// import operations from '../../redux/contacts/contacts-operations';\r\n\r\nfunction ContactsListItem({ contacts, deleteContact, fetchContacts }) {\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  return contacts.map(el => {\r\n    return (\r\n      <li key={el.id}>\r\n        {el.name}: {el.number}\r\n        <button\r\n          className=\"button\"\r\n          type=\"button\"\r\n          id={el.id}\r\n          onClick={e => {\r\n            deleteContact(e.target.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);\r\n","import { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\n\r\nfunction Filter({ contacts, filter, deleteContact }) {\r\n  const findUsers = () => {\r\n    return contacts.filter(el =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  return findUsers().map(el => {\r\n    return (\r\n      <li key={el.id}>\r\n        {el.name}: {el.number}\r\n        <button\r\n          className=\"button\"\r\n          type=\"button\"\r\n          id={el.id}\r\n          onClick={e => {\r\n            deleteContact(e.target.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const fetchContactsRequest = createAction(\r\n//   'contacts/fetchContactsRequest',\r\n// );\r\n// export const fetchContactsSuccess = createAction(\r\n//   'contacts/fetchContactsSuccess',\r\n// );\r\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\n// export const addContactRequest = createAction('contacts/addContactRequest');\r\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\r\n// export const addContactError = createAction('contacts/addContactError');\r\n\r\n// export const deleteContactRequest = createAction(\r\n//   'contacts/deleteContactRequest',\r\n// );\r\n// export const deleteContactSuccess = createAction(\r\n//   'contacts/deleteContactSuccess',\r\n// );\r\n// export const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/find');\r\n","import ContactsListItem from './ContactsListItem';\r\nimport Filter from '../Filter/Filter';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\n\r\nfunction ContactsList({ filter, changeFilter }) {\r\n  return (\r\n    <>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        onChange={e => changeFilter(e.currentTarget.value)}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n      <ul>{!filter ? <ContactsListItem /> : <Filter />}</ul>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: value => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","// import { useState, useEffect } from 'react';\r\nimport Form from './Form/Form';\r\nimport ContactsList from './ConatctsList/ConatctsList';\r\nimport './styles.css';\r\n\r\nexport default function App() {\r\n  // useEffect(() => {\r\n  //   const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n  //   if (parsedContacts) {\r\n  //     setContacts(parsedContacts);\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n      <h2>Contacts</h2>\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { changeFilter } from './contacts-actions';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './contacts-operations';\r\n\r\naxios.defaults.baseURL = 'https://619362fcd3ae6d0017da852d.mockapi.io';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) => {\r\n    console.log('payload', payload);\r\n    return state.filter(({ id }) => id !== payload.id);\r\n  },\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import contactsReducer from './contacts/contacts-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nconst myMiddleware = store => next => action => {\r\n  console.log('My middleware', action);\r\n  next(action);\r\n};\r\n\r\nconst middleware = [...getDefaultMiddleware(), myMiddleware, logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './Components/App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}